
public class Main {
	
	public static void main(String[] args) {
		
		//OOP에서는 객체의 멤버변수들이 외부로부터 보호되어 관리되는 것이 중요하다.
		//캡슐화, 정보은닉 - 라디오의 회로가 외부에 노출되어 있으면 오히려 안전하지 못하다고 보는 것과 비슷한 개념
		
		
		//멤버변수에 대한 접근을 제한하는 접근 제한자라는 개념의 발생
		//4가지 종류 (보안 강->약)
		// 1. private		: 본인 class 내부에서만 접근 가능
		// 2. (default)		: 같은 패키지에서는 외부에서 .연산자를 이용하여 접근이 가능, 다른 패키지에서는 .연산자로 접근 불가
		// 3. protected		: 같은 패키지에서는 접근간으하며 다른 패키지라도 상속관계의 클래스라면 접근 가능
		// 4. public		: 어느 곳에서든 .연산자로 멤버 접근 가능
		
		
		//같은 패키지의 클래스 객체 생성
		First f = new First();
		//f.a=50; //error: private은 외부에서 접근이 불가
		
		
		//같은 "패키지" 안에서는 private을 제외한 모든 접근제한자에 접근 가능 
		f.b=10;
		f.c=20;
		f.d=30;
		
		//객체의 메소드 안에서는 객체의 멤버에 접근할 때 접근제한자의 영향을 받지 않음
		
		f.aaa();
	}
	
}
